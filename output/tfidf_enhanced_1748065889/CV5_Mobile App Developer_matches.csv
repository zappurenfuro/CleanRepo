person_id,ability,program,title,skill,embedding_text,similarity_percentage
7998,"Over 4 years of experience in building and testing Mobile applications for Android in using Java for Android SDK Versions of 1.5 to 8.0(from Cupcake to Oreo); Experience in Software Development Life Cycle and Agile Methodologies; Familiar with Android libraries like Dagger2, Retrofit, Junit, Espresso; Experience in developing applications using Eclipse, Android Studio; Experience with the databases like MySQL, SQLite, ROOM; Experience with ZXING library, a library for scanning barcode; Experience developing applications using MVVM Design Pattern; Experience releasing Application to Play Store; Experience with Git for version control; Experience with Activities, Fragments, Data Binding, Media player and Adapters, Recycler View, AsyncTask, Broadcast Receiver, Content Providers and Push Notification; Hands on experience with Firebase analytics and Firebase Cloud Messaging",Master of Science in Computer Science; Bachelor of Technology in Technology Computer Science,Professional Programmer Analyst,Android SDK; Espresso Test framework; Rx Java; Charles proxy; Junit; Postman; Firebase Cloud Messaging; Firebase analytics; Tap joy SDK; Android development kit,"Over 4 years of experience in building and testing Mobile applications for Android in using Java for Android SDK Versions of 1.5 to 8.0(from Cupcake to Oreo); Experience in Software Development Life Cycle and Agile Methodologies; Familiar with Android libraries like Dagger2, Retrofit, Junit, Espresso; Experience in developing applications using Eclipse, Android Studio; Experience with the databases like MySQL, SQLite, ROOM; Experience with ZXING library, a library for scanning barcode; Experience developing applications using MVVM Design Pattern; Experience releasing Application to Play Store; Experience with Git for version control; Experience with Activities, Fragments, Data Binding, Media player and Adapters, Recycler View, AsyncTask, Broadcast Receiver, Content Providers and Push Notification; Hands on experience with Firebase analytics and Firebase Cloud Messaging | Professional Programmer AnalystProfessional Programmer AnalystProfessional Programmer Analyst | Android SDK; Espresso Test framework; Rx Java; Charles proxy; Junit; Postman; Firebase Cloud Messaging; Firebase analytics; Tap joy SDK; Android development kit",74.55
8723,Android Development; Java; IT Project Management; Mobile Development; SDK; UI/UX; Clean Architecture; Git; Firebase; Mobile Analytics; Agile Project Management; REST; RxJava; Retrofit; MVP; Native Android App; Dagger; Kotlin; Google Cloud Platform,Management,Android Developer,Agile; SCRUM; MVP; RxAndroid; RxJava; Retrofit; Butterknife; Android components; Custom Views; REST API; Custom views; Postman; Material Design; Firebase Realtime; Firestore; Analytics; Crashlytics; Storage; Dagger2; Kotlin; GCP App Engine; Endpoints; Hosting; CMS; Software implementation; IT issues solving; Website creation; IT solutions; Google Cloud; App Engine; Compute Engine; Cloud Storage; WordPress; Plugins; Database; Android Applications; Dagger; Clean architecture; SDK; OkHttp; GSON; Volley; Dagger 2; Clean Architecture; JUnit; Mockito; Team development; UI design; Usability improvement; Debugging; Clean code; Testing; JSON parsing; Abstract classes; Fragments; Sharedpreferences; SQLite; SQL; Performance monitoring; Bugs fixing; Remote team management; Distributed teams; Onsite-offshore model; Project planning; Contract negotiation; Team coaching; Jira; Leadership; Program management; Analytics reporting,Android Development; Java; IT Project Management; Mobile Development; SDK; UI/UX; Clean Architecture; Git; Firebase; Mobile Analytics; Agile Project Management; REST; RxJava; Retrofit; MVP; Native Android App; Dagger; Kotlin; Google Cloud Platform | Android DeveloperAndroid DeveloperAndroid Developer | Agile; SCRUM; MVP; RxAndroid; RxJava; Retrofit; Butterknife; Android components; Custom Views; REST API; Custom views; Postman; Material Design; Firebase Realtime; Firestore; Analytics; Crashlytics; Storage; Dagger2; Kotlin; GCP App Engine; Endpoints; Hosting; CMS; Software implementation; IT issues solving; Website creation; IT solutions; Google Cloud; App Engine; Compute Engine; Cloud Storage; WordPress; Plugins; Database; Android Applications; Dagger; Clean architecture; SDK; OkHttp; GSON; Volley; Dagger 2; Clean Architecture; JUnit; Mockito; Team development; UI design; Usability improvement; Debugging; Clean code; Testing; JSON parsing; Abstract classes; Fragments; Sharedpreferences; SQLite; SQL; Performance monitoring; Bugs fixing; Remote team management; Distributed teams; Onsite-offshore model; Project planning; Contract negotiation; Team coaching; Jira; Leadership; Program management; Analytics reporting,73.0
13473,Software Development; Android Development; SDLC; Programming Languages; Object Oriented Design; Continuous Integration; Agile Methodology; UI/UX Design; RESTful Services; Design Patterns; Google Play Services; Android Material Design; Testing Frameworks; Firebase; Paintcode; Location and Sensor APIs; Android Architecture Components; External Libraries; MVP and MVVM Architecture; Multitasking; Coordination; Problem Solving; UML Diagrams; Web Development; SOAP Services; Linux,,Software Engineer,Android development; SDLC; C; C++; Python; Java; Android Studio; Eclipse IDE; Object Oriented Analysis and Design; Jenkins; Agile; Scrum; UI/UX; Invision; RESTful services; Retrofit 2.0; Volley; Okhttp; Design Patterns; Google Play Services; Android Material Design; Testing Frameworks; JUnit4; Mockito; Espresso; Robotium; UIAutomator; Firebase; Paintcode; Location and Sensor APIs; Hockey App; Android Architecture Components; Live Data; ViewModel; External Libraries; Glide; Picasso; Dagger2; GSON; RxAndroid; MVP; MVVM; Android UI components; Coordinator Layout; Constraint Layout; Card Views; SQLite Database; 2 factor authentication; Adobe Analytics; Chase Payment Techs Vhpp; Android Data Binding Library; MapQuest API; Gradle; Fabrics Crashlytics; Junit4; JIRA; Confluence; BitBucket; ListView; GridView; ViewPager; TabLayout; ActionBar; Search Widgets; Runtime Permissions; Canvas; Tablet Compatibility; Restful Web Services; Shared Preferences; FindBugs; Lint; Serializable; Parcelable; DDMS; Async Task; Proguard; Regex; Dialog Fragment; Singleton Design Pattern; ViewHolder Design Pattern; Scrollable Tabs; Resource Qualifiers; LogCat; Activities; Fragments; Intents; Services; Splash Screen; Multithreading; Caching Strategies; Memory Management; Battery Optimization; Notification Service; UML; OOPS; Inheritance; Polymorphism; Collection API; XML Parsing; JSP; HTML; JavaScript; CSS; Action Classes; DAOs; SOAP Services; XML Schemas; Linux; Test Cases; Bug Fixing,Software Development; Android Development; SDLC; Programming Languages; Object Oriented Design; Continuous Integration; Agile Methodology; UI/UX Design; RESTful Services; Design Patterns; Google Play Services; Android Material Design; Testing Frameworks; Firebase; Paintcode; Location and Sensor APIs; Android Architecture Components; External Libraries; MVP and MVVM Architecture; Multitasking; Coordination; Problem Solving; UML Diagrams; Web Development; SOAP Services; Linux | Software EngineerSoftware EngineerSoftware Engineer | Android development; SDLC; C; C++; Python; Java; Android Studio; Eclipse IDE; Object Oriented Analysis and Design; Jenkins; Agile; Scrum; UI/UX; Invision; RESTful services; Retrofit 2.0; Volley; Okhttp; Design Patterns; Google Play Services; Android Material Design; Testing Frameworks; JUnit4; Mockito; Espresso; Robotium; UIAutomator; Firebase; Paintcode; Location and Sensor APIs; Hockey App; Android Architecture Components; Live Data; ViewModel; External Libraries; Glide; Picasso; Dagger2; GSON; RxAndroid; MVP; MVVM; Android UI components; Coordinator Layout; Constraint Layout; Card Views; SQLite Database; 2 factor authentication; Adobe Analytics; Chase Payment Techs Vhpp; Android Data Binding Library; MapQuest API; Gradle; Fabrics Crashlytics; Junit4; JIRA; Confluence; BitBucket; ListView; GridView; ViewPager; TabLayout; ActionBar; Search Widgets; Runtime Permissions; Canvas; Tablet Compatibility; Restful Web Services; Shared Preferences; FindBugs; Lint; Serializable; Parcelable; DDMS; Async Task; Proguard; Regex; Dialog Fragment; Singleton Design Pattern; ViewHolder Design Pattern; Scrollable Tabs; Resource Qualifiers; LogCat; Activities; Fragments; Intents; Services; Splash Screen; Multithreading; Caching Strategies; Memory Management; Battery Optimization; Notification Service; UML; OOPS; Inheritance; Polymorphism; Collection API; XML Parsing; JSP; HTML; JavaScript; CSS; Action Classes; DAOs; SOAP Services; XML Schemas; Linux; Test Cases; Bug Fixing,70.38
12716,"10+ years of experience in Java and Android application development; Experience in the complete Software Development Life Cycle (SDLC) process; Developing Android Applications using Core Java and Android APIs; Excellent team player; Ability to work independently in a fast paced environment; Unix shell and Java scripting; Developing Web Service and inter process communication applications; Java Threads (Multi-threading, Synchronization), Annotations, Generics, Collections API and TCP/IP Sockets; Programming languages like C, C++, Python and Java; Developing Android Enterprise Applications for mobiles and tablets; Using Android SDK tools like Hierarchy Viewer, TraceView, Draw 9-patch, AVD Manager, Android shell tools like Logcat and Android Platform tools like ADB, ADT up to Android 4.4(API Level 21); Web development frameworks and technologies such as HTML, JavaScript, XML, DOM and CSS; Automated Testing Frameworks including JUnit and Robotium; Developing test cases and test plans, Unit testing, Integration testing and User Acceptance testing; Developing the presentation layer components using JSPs, Servlets, JavaScript, XML, HTML; Developing the Bluetooth printer application and Main Menu application for Android phones; Designing front end applications, accessing SQL database, application layer protocols, and XML; Executing unit and sanity test cases for the multimedia component; Architecture Design, Development and Implementation, Troubleshooting and Debugging, Testing of Software Applications; Graphic design, audio and video features and handling various kinds of media using Photoshop, Flash; Using third party libraries and GitHub; Android UI Toolkit and Layout Managers; Object oriented designing such as Encapsulation, abstraction, Polymorphism, Cohesion and Coupling; Writing clean and clear code and expert in finding and fixing crashing bugs; Interaction between various devices and different versions of Android; Learning new Tools and Technologies; Link creation & path creation between two nodes, cross connection between the ports; Handling multiple tasks, prioritizing, and meeting deadlines; Coordinating with various team members involved in the project; Quick learner, excellent analytical, design and problem solving skills",Bachelor of Technology in Computer Science,Python Developer,Java; Android; Android Touch frameworks; Java mail API; List View; Grid View; View Pager; Tab layouts; Action Bar; Search widgets; Voice based search; Jira; Loader Manager; Content Provider; Resolver; Observer; Default Receiver; Broadcast Receiver; Android Service; Handler; AsyncTask; Singleton; 9 patch images; REST web services; Google Maps API v2; GPS technology; Eclipse; Android Studio; Photoshop CS5; Firework CS5; Illustrator CS5; Functionality testing; Sanity testing; Android 2.0/2; Eclipse 3.6; ADT Plug-in; SQLite; XML; Subversion; JUnit; Canvas; GSON library; Web services; QR codes; Camera API; Shared preferences; SQLite database; File system; Eclipse debugger; USB debugging; Serializable; Parcel able objects; DDMS; Async task handlers; Validations; Regex functions; PhoneGap; Sterling services; Paypal; Google APIs; Google Maps API; Dialog Fragment; Singleton design pattern; Windows XP; MAC; Android 2.0; Android 3.0; Android 4.0; Android SDK; ADT 21.1.0; JSON; REST API (XML); JavaScript; CSS; ANT; Multi-threading; JIRA; FIDDLER; VMware; Photoshop; UI for mobile phones; UI for tablet PCs; Update patches; Modules; Components; OO Concepts; UML; Activities; Intents; Services; Custom UI Components; Text View; ListView; Expandable ListView; Layouts; Menus; Edit boxes; Buttons; 9-patch images; Time picker; Date picker; Dialog boxes; Alert boxes; Spinners; Design principles; Web service calls; External database; Intent Integrator; Asynchronous tasks; Long term operations; UI performance; Widget testing; Multiple devices; Densities; Screens; Time constraint issues; Exception handling; Error handling; Post-production support; Change Request process; Bug fixing; QA team; Fragmentation issues; Error handling system; Android tools; Trace View; View hierarchy; Optimization; UI design; UI development; HTML; TILES; JSP; AJAX; DOM manipulation; Native JS; jQuery; Dynamic content; Data handling; Usability; Accessibility; Debugging; Unit Testing; CSS3 layout; Style mark-up; JavaScript methods; JavaScript properties; Mobile web design; Mobile app design; Mobile app development; QUNIT; Unit testing; JavaScript validations; BIRT reports; Resource Capacity Module Graphs; Production support; New enterprise releases; SVN; Code versioning; Code merging; Spring MVC framework; Hibernate; JPA; CRUD operations; Spring REST web services; Customer information; Restful services; Spring MVC; Customers accessing WSJ/Barrons; Tablets; Mobile; CSS3; HTML5; JS; Client side validations; Server side validations; AJAX calls; Unit test cases; Test result document; JBoss 6.x; JMS configurations; Maven; Agile work environment; Log4j; Logging; ORM classes; Hibernate mappings; Design patterns; Factory; Façade; Struts validation; Struts Custom tags; Tiles Framework; Presentation layer; Servlets; Action Classes; Action Form Classes; Struts-config.xml; Web.xml; Java JDBC; Oracle database; Database connections; Stored procedures; Application build; Releases; Application building tool; WebLogic; Deploying; Configuring; Oracle 9g; Database Storage; J2EE architecture; Eclipse IDE; Code repository; VSS; Clear case; TOAD; File validation; Object Oriented Analysis; Design; Class diagrams; Use Case Diagrams; Sequence diagrams; State Diagrams; Requirement gathering; Gap analysis; Workflow design; Client needs; MVC architecture; Struts Framework; Forms; DAO; GUI; Integrated-testing; Performance tuning; Adapter; Back navigation flow; Look alike buttons; TabView concept; Yahoo web services; Nearby hospitals; Clinics; Longitude; Latitude; Linear Layout; Relative Layout; Table Layout; Dynamic UI; Static UI; Themes; Styles; Android version Gingerbread; 9Patch; Hierarchy Viewer; TraceView; LogCat; Developer Options; MAT; Windows,"10+ years of experience in Java and Android application development; Experience in the complete Software Development Life Cycle (SDLC) process; Developing Android Applications using Core Java and Android APIs; Excellent team player; Ability to work independently in a fast paced environment; Unix shell and Java scripting; Developing Web Service and inter process communication applications; Java Threads (Multi-threading, Synchronization), Annotations, Generics, Collections API and TCP/IP Sockets; Programming languages like C, C++, Python and Java; Developing Android Enterprise Applications for mobiles and tablets; Using Android SDK tools like Hierarchy Viewer, TraceView, Draw 9-patch, AVD Manager, Android shell tools like Logcat and Android Platform tools like ADB, ADT up to Android 4.4(API Level 21); Web development frameworks and technologies such as HTML, JavaScript, XML, DOM and CSS; Automated Testing Frameworks including JUnit and Robotium; Developing test cases and test plans, Unit testing, Integration testing and User Acceptance testing; Developing the presentation layer components using JSPs, Servlets, JavaScript, XML, HTML; Developing the Bluetooth printer application and Main Menu application for Android phones; Designing front end applications, accessing SQL database, application layer protocols, and XML; Executing unit and sanity test cases for the multimedia component; Architecture Design, Development and Implementation, Troubleshooting and Debugging, Testing of Software Applications; Graphic design, audio and video features and handling various kinds of media using Photoshop, Flash; Using third party libraries and GitHub; Android UI Toolkit and Layout Managers; Object oriented designing such as Encapsulation, abstraction, Polymorphism, Cohesion and Coupling; Writing clean and clear code and expert in finding and fixing crashing bugs; Interaction between various devices and different versions of Android; Learning new Tools and Technologies; Link creation & path creation between two nodes, cross connection between the ports; Handling multiple tasks, prioritizing, and meeting deadlines; Coordinating with various team members involved in the project; Quick learner, excellent analytical, design and problem solving skills | Python DeveloperPython DeveloperPython Developer | Java; Android; Android Touch frameworks; Java mail API; List View; Grid View; View Pager; Tab layouts; Action Bar; Search widgets; Voice based search; Jira; Loader Manager; Content Provider; Resolver; Observer; Default Receiver; Broadcast Receiver; Android Service; Handler; AsyncTask; Singleton; 9 patch images; REST web services; Google Maps API v2; GPS technology; Eclipse; Android Studio; Photoshop CS5; Firework CS5; Illustrator CS5; Functionality testing; Sanity testing; Android 2.0/2; Eclipse 3.6; ADT Plug-in; SQLite; XML; Subversion; JUnit; Canvas; GSON library; Web services; QR codes; Camera API; Shared preferences; SQLite database; File system; Eclipse debugger; USB debugging; Serializable; Parcel able objects; DDMS; Async task handlers; Validations; Regex functions; PhoneGap; Sterling services; Paypal; Google APIs; Google Maps API; Dialog Fragment; Singleton design pattern; Windows XP; MAC; Android 2.0; Android 3.0; Android 4.0; Android SDK; ADT 21.1.0; JSON; REST API (XML); JavaScript; CSS; ANT; Multi-threading; JIRA; FIDDLER; VMware; Photoshop; UI for mobile phones; UI for tablet PCs; Update patches; Modules; Components; OO Concepts; UML; Activities; Intents; Services; Custom UI Components; Text View; ListView; Expandable ListView; Layouts; Menus; Edit boxes; Buttons; 9-patch images; Time picker; Date picker; Dialog boxes; Alert boxes; Spinners; Design principles; Web service calls; External database; Intent Integrator; Asynchronous tasks; Long term operations; UI performance; Widget testing; Multiple devices; Densities; Screens; Time constraint issues; Exception handling; Error handling; Post-production support; Change Request process; Bug fixing; QA team; Fragmentation issues; Error handling system; Android tools; Trace View; View hierarchy; Optimization; UI design; UI development; HTML; TILES; JSP; AJAX; DOM manipulation; Native JS; jQuery; Dynamic content; Data handling; Usability; Accessibility; Debugging; Unit Testing; CSS3 layout; Style mark-up; JavaScript methods; JavaScript properties; Mobile web design; Mobile app design; Mobile app development; QUNIT; Unit testing; JavaScript validations; BIRT reports; Resource Capacity Module Graphs; Production support; New enterprise releases; SVN; Code versioning; Code merging; Spring MVC framework; Hibernate; JPA; CRUD operations; Spring REST web services; Customer information; Restful services; Spring MVC; Customers accessing WSJ/Barrons; Tablets; Mobile; CSS3; HTML5; JS; Client side validations; Server side validations; AJAX calls; Unit test cases; Test result document; JBoss 6.x; JMS configurations; Maven; Agile work environment; Log4j; Logging; ORM classes; Hibernate mappings; Design patterns; Factory; Façade; Struts validation; Struts Custom tags; Tiles Framework; Presentation layer; Servlets; Action Classes; Action Form Classes; Struts-config.xml; Web.xml; Java JDBC; Oracle database; Database connections; Stored procedures; Application build; Releases; Application building tool; WebLogic; Deploying; Configuring; Oracle 9g; Database Storage; J2EE architecture; Eclipse IDE; Code repository; VSS; Clear case; TOAD; File validation; Object Oriented Analysis; Design; Class diagrams; Use Case Diagrams; Sequence diagrams; State Diagrams; Requirement gathering; Gap analysis; Workflow design; Client needs; MVC architecture; Struts Framework; Forms; DAO; GUI; Integrated-testing; Performance tuning; Adapter; Back navigation flow; Look alike buttons; TabView concept; Yahoo web services; Nearby hospitals; Clinics; Longitude; Latitude; Linear Layout; Relative Layout; Table Layout; Dynamic UI; Static UI; Themes; Styles; Android version Gingerbread; 9Patch; Hierarchy Viewer; TraceView; LogCat; Developer Options; MAT; Windows",69.74
13199,Android app architecture design; MVVM architecture; design patterns; Android Oreo; Jenkins CI; cloud platforms; REST services; Retrofit; RxJava; GSON; Material design; Jira; Kotlin; Linux; Android Studio; Git; Debugging; embedded systems; JSP; HTML; CSS; JavaScript; jQuery; JSON; Apache Struts; MVC; JAXB; SAXP; XML Schema; SOAP; JMS; JUnit; Ant; Agile; Spring; EJB; Rational Rose; Dependency Injection; IBM MQ Series; SOA; Hibernate; PL/SQL; IBM RAD7; JIRA; CM Synergy; Log4j; JSF; ICEfaces; POJO; Eclipse; JBOSS; IBM WebSphere; DB2; Apache Axis; LoadRunner; Python; Flask; SQLAlchemy; PostgreSQL; MongoDB; Kafka; Elasticsearch; Apache Camel,Bachelors of Technology in Computer Science Engineering,Android Developer / Architect,MVVM architecture; design patterns; Android Oreo; Jenkins CI; OpenStack; AWS; Pivotal Cloud Foundry; SourceTree Git; Retrofit; RxJava; GSON; Material design; Jira; Kotlin; Android architecture; REST; Linux; Android Studio; Git; Debugging; Embedded systems; JSP; HTML; CSS; JavaScript; jQuery; JSON; Apache Struts; MVC; JAXB; SAXP; XML Schema; SOAP; JMS; JUnit; Ant; Agile; Spring; EJB; Rational Rose; Dependency Injection; IBM MQ Series; SOA; Hibernate; PL/SQL; IBM RAD7; JIRA; CM Synergy; Log4j; JSF; ICEfaces; POJO; Eclipse; JBOSS; IBM WebSphere; DB2; Apache Axis; LoadRunner; Python; Flask; SQLAlchemy; PostgreSQL; MongoDB; Kafka; Elasticsearch; Apache Camel,Android app architecture design; MVVM architecture; design patterns; Android Oreo; Jenkins CI; cloud platforms; REST services; Retrofit; RxJava; GSON; Material design; Jira; Kotlin; Linux; Android Studio; Git; Debugging; embedded systems; JSP; HTML; CSS; JavaScript; jQuery; JSON; Apache Struts; MVC; JAXB; SAXP; XML Schema; SOAP; JMS; JUnit; Ant; Agile; Spring; EJB; Rational Rose; Dependency Injection; IBM MQ Series; SOA; Hibernate; PL/SQL; IBM RAD7; JIRA; CM Synergy; Log4j; JSF; ICEfaces; POJO; Eclipse; JBOSS; IBM WebSphere; DB2; Apache Axis; LoadRunner; Python; Flask; SQLAlchemy; PostgreSQL; MongoDB; Kafka; Elasticsearch; Apache Camel | Android Developer / ArchitectAndroid Developer / ArchitectAndroid Developer / Architect | MVVM architecture; design patterns; Android Oreo; Jenkins CI; OpenStack; AWS; Pivotal Cloud Foundry; SourceTree Git; Retrofit; RxJava; GSON; Material design; Jira; Kotlin; Android architecture; REST; Linux; Android Studio; Git; Debugging; Embedded systems; JSP; HTML; CSS; JavaScript; jQuery; JSON; Apache Struts; MVC; JAXB; SAXP; XML Schema; SOAP; JMS; JUnit; Ant; Agile; Spring; EJB; Rational Rose; Dependency Injection; IBM MQ Series; SOA; Hibernate; PL/SQL; IBM RAD7; JIRA; CM Synergy; Log4j; JSF; ICEfaces; POJO; Eclipse; JBOSS; IBM WebSphere; DB2; Apache Axis; LoadRunner; Python; Flask; SQLAlchemy; PostgreSQL; MongoDB; Kafka; Elasticsearch; Apache Camel,69.43
